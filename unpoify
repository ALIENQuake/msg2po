#!/usr/bin/env python
# coding: utf-8

version='1.0.0'

import io
import os
import argparse
import sys
import subprocess
import polib
import shutil
import re
import bgforge_po


default_po_dir = bgforge_po.get_po_dir()

#parse args
parser = argparse.ArgumentParser(description='Unpoify files into parent directory of selected PO dir',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('DIR', nargs = '?', default = default_po_dir, help='directory with PO files')
args=parser.parse_args()

#init vars
po_dir = args.DIR
bgforge_po.dir_or_exit(po_dir)
tra_dir = bgforge_po.parent_dir(po_dir)

with bgforge_po.cd(tra_dir):
  po_dir = bgforge_po.po_dirname # "po"

  #find PO files
  po_files = []
  for dir_name, subdir_list, file_list in os.walk(po_dir):
    for f in file_list:
      if bgforge_po.get_ext(f) == 'po':
        po_files.append(f)
  if po_files == []:
    print "no PO files found in directory {}".format(po_dir)
    sys.exit(1)

  #extract PO files
  extract_file_list = []
  for pf in po_files:
    po_path = po_dir + '/' + pf
    print "processing {}".format(po_path)
    po = polib.pofile(po_path)
    for e in po:
      for eo in e.occurrences:
        extract_file_list.append(eo[0])
    extract_file_set = set(extract_file_list)

    dst_dir = bgforge_po.strip_ext(pf) # lang

    epo = bgforge_po.epofile(po_path) #open once
    for ef in sorted(extract_file_set):
      enc = bgforge_po.get_enc(po_path, ef)
      ef_extract_path = dst_dir + '/' + ef
      bgforge_po.create_dir(bgforge_po.get_dir(ef_extract_path))
      print "Extracting {} from {} into {} with encoding {}".format(ef, po_path, ef_extract_path, enc)
      bgforge_po.po2file(epo, ef_extract_path, enc, ef, dst_dir)
    print 'Extracted {} into {}'.format(po_path, dst_dir, enc)
