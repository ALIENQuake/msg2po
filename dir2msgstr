#!/usr/bin/env python
# coding: utf-8

version='1.0.0'

import io
import os
import argparse
import sys
import polib
import shutil
import re
import os
import bgforge_po

valid_extensions = [ 'msg', 'txt', 'sve', ]

#parse args
parser = argparse.ArgumentParser(description='Load strings from files in selected dir into PO',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('-s', dest='src_dir', default='.', help='directory to load', required=True)
parser.add_argument('-o', dest='output_file', help='existing PO file', required=True)
parser.add_argument('--ext', dest='file_ext', help='only load files with this extension', required=True)
parser.add_argument('-e', dest='enc', default='cp1252', help='source encoding')
parser.add_argument('-w','--width', dest='width', default='78', help='output PO wrapwith')
args=parser.parse_args()


#init vars
src_dir = args.src_dir
enc = args.enc
width = int(args.width)
ext = args.file_ext
output_file = os.path.abspath(args.output_file)

devnull = open(os.devnull, 'w')


def dir2msgstr(src_dir, po): #relative path, pofile object
  with bgforge_po.cd(src_dir):

    for dir_name, subdir_list, file_list in os.walk('.',topdown=False):
      for file_name in file_list:
        full_name=os.path.join(dir_name, file_name)
        full_name=re.sub('^\./','',full_name)  #remove trailing './'
        fext=bgforge_po.get_ext(file_name)
        if not fext == ext:
          continue

        print "processing {}".format(full_name)
        po = bgforge_po.file2msgstr(full_name, po, full_name)

  po = bgforge_po.po_make_unique(po)
  return po

po = polib.pofile(output_file, wrapwidth=width)
po.metadata = bgforge_po.metadata
po = dir2msgstr(src_dir, po)
po.save(output_file)
print "Processed '{}' directory with encoding {}, the result is in {}".format(src_dir, enc, output_file)
